// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CHECK24 GenDev 7 API
 *
 * API for the 7th CHECK24 GenDev challenge providing product offerings from five different internet providers
 *
 * API version: dev
 */

package models

import (
	"errors"
)

type PercentageDiscount struct {
	Percentage int32 `json:"percentage"`

	MaxDiscountInCent *int32 `json:"maxDiscountInCent,omitempty"`

	DurationInMonths *int32 `json:"durationInMonths,omitempty"`
}

// AssertPercentageDiscountRequired checks if the required fields are not zero-ed
func AssertPercentageDiscountRequired(obj PercentageDiscount) error {
	elements := map[string]interface{}{
		"percentage": obj.Percentage,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertPercentageDiscountConstraints checks if the values respects the defined constraints
func AssertPercentageDiscountConstraints(obj PercentageDiscount) error {
	if obj.Percentage < 0 {
		return &ParsingError{Param: "Percentage", Err: errors.New(ErrMsgMinValueConstraint)}
	}
	if obj.Percentage > 100 {
		return &ParsingError{Param: "Percentage", Err: errors.New(ErrMsgMaxValueConstraint)}
	}
	if obj.MaxDiscountInCent != nil && *obj.MaxDiscountInCent < 0 {
		return &ParsingError{Param: "MaxDiscountInCent", Err: errors.New(ErrMsgMinValueConstraint)}
	}
	if obj.DurationInMonths != nil && *obj.DurationInMonths < 0 {
		return &ParsingError{Param: "DurationInMonths", Err: errors.New(ErrMsgMinValueConstraint)}
	}
	return nil
}
