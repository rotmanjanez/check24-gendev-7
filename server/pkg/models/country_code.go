// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CHECK24 GenDev 7 API
 *
 * API for the 7th CHECK24 GenDev challenge providing product offerings from five different internet providers
 *
 * API version: dev
 */

package models

import (
	"fmt"
)

// CountryCode : ISO country code
type CountryCode string

// List of CountryCode
const (
	DE CountryCode = "DE"
	AT CountryCode = "AT"
	CH CountryCode = "CH"
)

// AllowedCountryCodeEnumValues is all the allowed values of CountryCode enum
var AllowedCountryCodeEnumValues = []CountryCode{
	"DE",
	"AT",
	"CH",
}

// validCountryCodeEnumValue provides a map of CountryCodes for fast verification of use input
var validCountryCodeEnumValues = map[CountryCode]struct{}{
	"DE": {},
	"AT": {},
	"CH": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CountryCode) IsValid() bool {
	_, ok := validCountryCodeEnumValues[v]
	return ok
}

// NewCountryCodeFromValue returns a pointer to a valid CountryCode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCountryCodeFromValue(v string) (CountryCode, error) {
	ev := CountryCode(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for CountryCode: valid values are %v", v, AllowedCountryCodeEnumValues)
}

// AssertCountryCodeRequired checks if the required fields are not zero-ed
func AssertCountryCodeRequired(obj CountryCode) error {
	return nil
}

// AssertCountryCodeConstraints checks if the values respects the defined constraints
func AssertCountryCodeConstraints(obj CountryCode) error {
	return nil
}
