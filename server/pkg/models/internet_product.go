// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CHECK24 GenDev 7 API
 *
 * API for the 7th CHECK24 GenDev challenge providing product offerings from five different internet providers
 *
 * API version: dev
 */

package models

import (
	"encoding"
	"encoding/json"
	"time"
)

type InternetProduct struct {
	Id string `json:"id"`

	Provider string `json:"provider"`

	Name string `json:"name"`

	Description string `json:"description,omitempty"`

	// Date when the product was offered
	DateOffered time.Time `json:"dateOffered"`

	ProductInfo ProductInfo `json:"productInfo"`

	Pricing Pricing `json:"pricing"`
}

// AssertInternetProductRequired checks if the required fields are not zero-ed
func AssertInternetProductRequired(obj InternetProduct) error {
	elements := map[string]interface{}{
		"id":          obj.Id,
		"provider":    obj.Provider,
		"name":        obj.Name,
		"dateOffered": obj.DateOffered,
		"productInfo": obj.ProductInfo,
		"pricing":     obj.Pricing,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertProductInfoRequired(obj.ProductInfo); err != nil {
		return err
	}
	if err := AssertPricingRequired(obj.Pricing); err != nil {
		return err
	}
	return nil
}

// AssertInternetProductConstraints checks if the values respects the defined constraints
func AssertInternetProductConstraints(obj InternetProduct) error {
	if err := AssertProductInfoConstraints(obj.ProductInfo); err != nil {
		return err
	}
	if err := AssertPricingConstraints(obj.Pricing); err != nil {
		return err
	}
	return nil
}

// Implementation of the BinaryMarshaller interface
func (obj InternetProduct) MarshalBinary() ([]byte, error) {
	return json.Marshal(obj)
}

// Implementation of the BinaryUnmarshaller interface
func (obj *InternetProduct) UnmarshalBinary(data []byte) error {
	return json.Unmarshal(data, obj)
}

// Ensure that InternetProduct implements the BinaryMarshaler and BinaryUnmarshaler interfaces
var _ encoding.BinaryMarshaler = (*InternetProduct)(nil)
var _ encoding.BinaryUnmarshaler = (*InternetProduct)(nil)

func CanonicalizeInternetProduct(product InternetProduct) InternetProduct {
	product.ProductInfo = CanonicalizeProductInfo(product.ProductInfo)
	product.Pricing = CanonicalizePricing(product.Pricing)

	return product
}
